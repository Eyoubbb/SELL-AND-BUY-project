@use "../abstracts" as *;
@use "../base" as *;

@use "../components/header";
@use "../components/footer";

.wrapper-form {
    
    --gap: 4em;
	display: flex;
	justify-content: center;
    align-items: center;
    height: 66vh;
	// position: relative;
	// bottom: 15vh;

    div {
        display: flex;
        justify-content: center;
    }

    form {
		width: 30vw;

        :is(&.form-invalid input, & input:not(:placeholder-shown)):is(:invalid, .invalid) {
			color: var(--error);
			border-color: var(--error);
			outline-color: var(--error);

			&::placeholder {
				color: var(--error);
			}
		}

		fieldset {
			display: none;
			flex-direction: column;
			gap: calc(var(--gap) * .5);
			animation: fade .6s ease;
		
			&.active {
				display: flex;
			}
		
			.field:has(button) {
				flex-direction: row;
				gap: 10px;
			}

			&.special {
				position: relative;
				top: 5vh;
			}
		}

		.progress-bar {
			--bg-color: var(--primary-2);
			counter-reset: step;
			display: flex;
			font-size: .65em;
			position: absolute;
			top: 13vh;
			left: 35vw;
			width: 30vw;
		
			li {
				position: relative;
				width: calc(100% / 3);
				color: black;
				font-size: .9em;
				text-transform: uppercase;
				text-align: center;
		
				@include pseudo(before, counter(step), static) {
					--size: 2.2em;
					counter-increment: step;
					margin: 0 auto 5px;
					width: var(--size);
					display: block;
					color: var(--primary-1);
					font-size: calc(var(--size) / 2);
					font-weight: bold;
					line-height: var(--size);
					background-color: var(--accent-1);
					border-radius: 3px;
					transition: color .3s .2s ease, background-color .3s .2s ease;
				}
		
				&.active ~ ::before {
					color: unset;
					font-weight: normal;
					background-color: var(--bg-color);
					transition: color .3s ease, background-color .3s ease;
				}
		
				@include pseudo($pos: 9px auto auto -50%, $sel: ':not(:first-child)') {
					z-index: -1;
					@include size(100%, 2px);
					translate: 0 50%;
					background: linear-gradient(90deg, var(--accent-1) 50%, var(--bg-color) 50%);
					background-size: 200%;
					transition: background-position-x .3s ease;
				}
		
				&.active ~ ::after {
					background-position-x: 100%;
					transition: background-position-x .3s .2s ease;
				}
			}
		}

		.field {
			display: flex;
			flex-direction: column;
			gap: calc(var(--gap) / 3);

			label {
				width: fit-content;
				font-size: 1.5em;
				font-weight: bold;
			}

			input {
				padding: .75em;
				border: 1px solid black;
				border-radius: var(--radius);
				@include box-shadow($down: 5px);

				&::placeholder {
					font-size: .8em;
				}

				&.socials {
					height: 35px;
				}
			}

			textarea {
                resize: none;
				padding: .75em;
				width: 100%;
                height: 15vh;
				border: 1px solid black;
				border-radius: var(--radius);
				@include box-shadow($down: 5px);

				&::placeholder {
					font-size: .8em;
				}
			}

			.error {
				color: var(--error);
				font-size: .9em;
			}
		}
    }

    .commands {
        margin-top: calc(var(--gap) / 2);
        display: flex;
        gap: 20px;
        border-radius: var(--radius);
        
        button {
            width: 100%;
            padding: .75em;
            color: var(--primary-1);
            font-size: 1.25em;
            font-weight: bold;
            background-color: var(--secondary-1);
            border-radius: var(--radius);
            @include box-shadow;
            transition: scale .3s ease;

            &:active {
                scale: .95;
            }
        }
    }

}

@keyframes fade {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}